<project name="esper-benchmark" default="run" basedir=".">

    <property name="lib" value="lib"/>
    <property name="src" value="src/main/java"/>
    <property name="build" value="bin"/>

    <path id="lib.classpath">
        <fileset dir="${lib}">
            <include name="*.jar"/>
        </fileset>
        <pathelement location="${build}"/>
        <!--<pathelement location="../../esper/target/classes"/>//if no Esper is in lib we use local build
        <fileset dir="../../esper/lib">// local dependencies 
            <include name="*.jar"/>
        </fileset>-->
    </path>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
	<echo message="BUILD PATH: ${build}"/>
	<echo message="LIB PATH: ${lib}"/>
	<echo message="SRC PATH: ${src}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
     <javac classpathref="lib.classpath" srcdir="${src}" destdir="${build}">
          <src path="${src}"/>
      </javac>
  </target>

  <target name="build" depends="compile"
        description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="."/>
	<!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <jar jarfile="benchmark.jar" basedir="${build}"/>
  </target>

    <target name="clean">
        <delete dir="${build}"/>
        <delete file="esper-benchmark.zip"/>
    </target>

    <target name="run" depends="build">
        <echo message="***"/>
        <echo message="* Warning: running in simulation mode with no remote process to send messages"/>
        <echo message="* This is not the recommanded mode to perform real benchmarks"/>
        <echo message="***"/>
        <java classpathref="lib.classpath" classname="edu.brown.benchmark.voteresper.server.Server" fork="true">
            <arg line="-rate 4x10000 -mode STP"/>
            <classpath location="etc"/><!-- for etc/log4j.xml and statement discovery -->
        </java>
    </target>

    <target name="runServer" depends="build">
        <property name="mode" value="Voter"/>
        <property name="thread" value="1"/>
        <property name="sleep" value="1"/>
        <property name="order" value="false"/>
        <property name="stat" value="5"/>
        <property name="backend" value="voltdb"/>
        <property name="threshold" value="20000"/>
        <property name="contestants" value="50"/>
        <property name="dir" value="/home/john/git/esper-voter/voter-benchmark/"/>
        <property name="file" value="votes-50-20000_1.txt"/>
        <property name="outfile" value="/home/john/git/esper-voter/data/out/out.txt"/>
        <property name="duration" value="60000"/>
        <property name="queue" value="-1"/>
        <java classpathref="lib.classpath" classname="edu.brown.benchmark.voteresper.server.Server" fork="true">
            <!--<arg line="-mode STP"/> -->

            <arg line="-mode ${mode}"/>
            <arg line="-sleep ${sleep}"/>
            <arg line="-thread ${thread}"/>
            <arg line="-order ${order}"/>
            <arg line="-stat ${stat}"/>
            <arg line="-backend ${backend}"/>
            <arg line="-threshold ${threshold}"/>
            <arg line="-contestants ${contestants}"/>
            <arg line="-dir ${dir}"/>
            <arg line="-file ${file}"/>
            <arg line="-outfile ${outfile}"/>
            <arg line="-duration ${duration}"/>
            <arg line="-queue ${queue}"/>
            <classpath location="etc"/><!-- for etc/log4j.xml and statement discovery -->
        </java>
    </target>

    <target name="runClient" depends="build">
        <property name="rate" value="1000"/>
        <property name="mode" value="Voter"/>
        <property name="dir" value="/home/john/git/esper-voter/data/"/>
        <property name="file" value="votes-50-20000_1.txt"/>
        <property name="duration" value="60000"/>
        <java classpathref="lib.classpath" classname="edu.brown.benchmark.voteresper.client.Client" fork="true">
            <arg line="-rate ${rate}"/>
            <arg line="-mode ${mode}"/>
            <arg line="-dir ${dir}"/>
            <arg line="-file ${file}"/>
            <arg line="-duration ${duration}"/>
        </java>
    </target>

    <!-- use this target to zip the example code for distribution -->
    <target name="release" depends="clean, build">
        <zip basedir="." destfile="esper-benchmark.zip" includes="build/**,etc/**,build.xml,run*.cmd,run*.sh,readme.txt,lib/readme.txt"/>
    </target>

</project>
